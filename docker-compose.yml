version: "3.9"

services:
  mongo:
    image: mongo
    container_name: mongo_db
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 5s
      timeout: 5s
      retries: 10

  product:
    build: ./product
    container_name: product_service
    ports:
      - "3001:3001"
    environment:
      - MONGODB_PRODUCT_URI=mongodb://host.docker.internal:27017/ProductService
      - RABBITMQ_URI=amqp://rabbitmq
      - RABBITMQ_QUEUE=product
    depends_on:
      rabbitmq:
        condition: service_healthy

  order:
    build: ./order
    container_name: order_service
    ports:
      - "3002:3002"
    environment:
      - MONGODB_ORDER_URI=mongodb://host.docker.internal:27017/OrderService
      - RABBITMQ_URI=amqp://rabbitmq
      - RABBITMQ_QUEUE=product
    depends_on:
      rabbitmq:
        condition: service_healthy

  auth:
    build: ./auth
    container_name: auth_service
    ports:
      - "3000:3000"
    environment:
      - MONGODB_AUTH_URI=mongodb://host.docker.internal:27017/AuthService
      - RABBITMQ_URI=amqp://rabbitmq
      - RABBITMQ_QUEUE=product
    depends_on:
      rabbitmq:
        condition: service_healthy

  api-gateway:
    build: ./api-gateway
    container_name: api_gateway
    ports:
      - "3003:3003"
    environment:
      - PRODUCT_SERVICE_URL=http://product:3001
      - ORDER_SERVICE_URL=http://order:3002
      - AUTH_SERVICE_URL=http://auth:3000
    depends_on:
      - product
      - order
      - auth
      - rabbitmq

volumes:
  mongo-data:
